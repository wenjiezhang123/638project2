import numpy as np
import pandas as pd
from ccg_nlpy import remote_pipeline

data = pd.read_csv("train_detect_sent.csv").reset_index(drop=True)
formal_ans = pd.read_csv("train.csv").reset_index(drop=True)

#print(formal_ans["text"][0])

# question_classes = ['PERSON',
#  'FACILITY',
#  'LAW',
#  'OTHER',
#  'FACILITY',
#  'TIME',
#  'OTHER',
#  'PERSON',
#  'QUANTITY',
#  'DATE',
#  'LOCATION',
#  'OTHER',
#  'LAW',
#  'OTHER',
#  'OTHER',
#  'QUANTITY',
#  'DATE']

question_classes = ['PERSON',
 'FACILITY',
 'LAW',
 'OTHER',
 'FACILITY',
 'TIME',
 'OTHER',
 'PERSON',
 'QUANTITY',
 'DATE',
 'LOCATION',
 'OTHER',
 'LAW',
 'OTHER',
 'OTHER',
 'QUANTITY',
 'DATE',
 'OTHER',
 'QUANTITY',
 'QUANTITY',
 'OTHER',
 'QUANTITY',
 'DATE',
 'ORGANIZATION',
 'DATE',
 'EVENT',
 'EVENT',
 'DATE',
 'OTHER',
 'PERSON',
 'LANGUAGE',
 'DATE',
 'PERSON',
 'ORGANIZATION',
 'QUANTITY',
 'LANGUAGE',
 'DATE',
 'PERSON',
 'LANGUAGE',
 'QUANTITY',
 'PERCENT',
 'LOCATION',
 'PERCENT',
 'QUANTITY',
 'LOCATION',
 'LOCATION',
 'LOCATION',
 'OTHER',
 'PERCENT',
 'PERSON',
 'TIME',
 'EVENT',
 'WORK OF ART',
 'OTHER',
 'DATE',
 'OTHER',
 'DATE',
 'PERSON',
 'PERSON',
 'PERSON',
 'QUANTITY',
 'DATE',
 'DATE',
 'TIME',
 'OTHER',
 'OTHER',
 'QUANTITY',
 'OTHER',
 'PERSON',
 'ORGANIZATION',
 'OTHER',
 'DATE',
 'PERSON',
 'QUANTITY',
 'PERCENT',
 'QUANTITY',
 'LAW',
 'QUANTITY',
 'PERCENT',
 'QUANTITY',
 'QUANTITY',
 'QUANTITY',
 'QUANTITY',
 'FACILITY',
 'PERCENT',
 'QUANTITY',
 'QUANTITY',
 'QUANTITY',
 'WORK OF ART',
 'DATE',
 'PERSON',
 'OTHER',
 'OTHER',
 'EVENT',
 'OTHER',
 'PERSON',
 'QUANTITY',
 'PERSON',
 'PERSON',
 'QUANTITY',
 'DATE',
 'QUANTITY',
 'QUANTITY',
 'QUANTITY',
 'QUANTITY',
 'OTHER',
 'EVENT',
 'LOCATION',
 'PERSON',
 'PERSON',
 'OTHER',
 'DATE',
 'OTHER',
 'QUANTITY',
 'PERSON',
 'OTHER',
 'OTHER',
 'PERSON',
 'TIME',
 'PERSON',
 'TIME',
 'OTHER',
 'QUANTITY',
 'EVENT',
 'FACILITY',
 'LANGUAGE',
 'DATE',
 'PERSON',
 'OTHER',
 'TIME',
 'TIME',
 'TIME',
 'QUANTITY',
 'TIME',
 'LOCATION',
 'PERSON',
 'OTHER',
 'QUANTITY',
 'FACILITY',
 'LAW',
 'PRODUCT',
 'PERSON',
 'DATE',
 'PERSON',
 'DATE',
 'PERSON',
 'OTHER',
 'MONEY',
 'QUANTITY',
 'FACILITY',
 'QUANTITY',
 'DATE',
 'PRODUCT',
 'DATE',
 'PERCENT',
 'OTHER',
 'PERSON',
 'DATE',
 'LOCATION',
 'OTHER',
 'DATE',
 'OTHER',
 'DATE',
 'DATE',
 'ORGANIZATION',
 'QUANTITY',
 'OTHER',
 'DATE',
 'QUANTITY',
 'DATE',
 'QUANTITY',
 'OTHER',
 'FACILITY',
 'ORGANIZATION',
 'LOCATION',
 'OTHER',
 'DATE',
 'LOCATION',
 'QUANTITY',
 'LOCATION',
 'ORGANIZATION',
 'LOCATION',
 'LOCATION',
 'PERSON',
 'OTHER',
 'OTHER',
 'EVENT',
 'OTHER',
 'PERSON',
 'OTHER',
 'OTHER',
 'TIME',
 'PERSON',
 'QUANTITY',
 'PERSON',
 'LOCATION',
 'QUANTITY',
 'OTHER',
 'QUANTITY',
 'OTHER',
 'DATE',
 'QUANTITY',
 'OTHER',
 'TIME',
 'LAW',
 'DATE',
 'DATE',
 'PERSON',
 'DATE',
 'DATE',
 'OTHER',
 'QUANTITY',
 'FACILITY',
 'OTHER',
 'QUANTITY',
 'TIME',
 'PERSON',
 'OTHER',
 'OTHER',
 'OTHER',
 'ORGANIZATION',
 'TIME',
 'OTHER',
 'ORGANIZATION',
 'ORGANIZATION',
 'QUANTITY',
 'LOCATION',
 'PERSON',
 'EVENT',
 'PERSON',
 'TIME',
 'TIME',
 'OTHER',
 'OTHER',
 'ORGANIZATION',
 'DATE',
 'ORGANIZATION',
 'ORGANIZATION',
 'OTHER',
 'PRODUCT',
 'PERSON',
 'PERSON',
 'PERSON',
 'QUANTITY',
 'OTHER',
 'TIME',
 'LOCATION',
 'OTHER',
 'DATE',
 'QUANTITY',
 'QUANTITY',
 'QUANTITY',
 'PRODUCT',
 'PERSON',
 'PERSON',
 'DATE',
 'PERSON',
 'DATE',
 'LOCATION',
 'OTHER',
 'PRODUCT',
 'PERSON',
 'PERSON',
 'PERSON',
 'OTHER',
 'PERSON',
 'PERSON',
 'OTHER',
 'PERSON',
 'TIME',
 'TIME',
 'TIME',
 'GPE',
 'DATE',
 'OTHER',
 'PRODUCT',
 'PERSON',
 'GPE',
 'LANGUAGE',
 'TIME',
 'LANGUAGE',
 'TIME',
 'FACILITY',
 'PRODUCT',
 'TIME',
 'QUANTITY',
 'FACILITY',
 'LANGUAGE',
 'TIME',
 'OTHER',
 'PERSON',
 'QUANTITY',
 'EVENT',
 'TIME',
 'PRODUCT',
 'EVENT',
 'TIME',
 'LANGUAGE',
 'OTHER',
 'PERSON',
 'LANGUAGE',
 'OTHER',
 'TIME',
 'PRODUCT',
 'DATE',
 'PRODUCT',
 'OTHER',
 'QUANTITY',
 'QUANTITY',
 'QUANTITY',
 'QUANTITY',
 'QUANTITY',
 'PRODUCT',
 'ORGANIZATION',
 'LOCATION',
 'LOCATION',
 'NORP',
 'ORGANIZATION',
 'OTHER',
 'OTHER',
 'OTHER',
 'ORGANIZATION',
 'TIME',
 'LANGUAGE',
 'PERSON',
 'NORP',
 'OTHER',
 'PERSON',
 'OTHER',
 'PERSON',
 'OTHER',
 'EVENT',
 'WORK OF ART',
 'GPE',
 'LANGUAGE',
 'TIME',
 'ORGANIZATION',
 'PERSON',
 'PERSON',
 'PERSON',
 'PERSON',
 'DATE',
 'EVENT',
 'EVENT',
 'TIME',
 'TIME',
 'LANGUAGE',
 'PERSON',
 'TIME',
 'PERSON',
 'PRODUCT',
 'OTHER',
 'PERSON',
 'DATE',
 'WORK OF ART',
 'OTHER',
 'WORK OF ART',
 'OTHER',
 'LOCATION',
 'OTHER',
 'WORK OF ART',
 'TIME',
 'PERSON',
 'OTHER',
 'EVENT',
 'PERSON',
 'EVENT',
 'OTHER',
 'PERSON',
 'PERSON',
 'PERSON',
 'PERSON',
 'QUANTITY',
 'ORGANIZATION',
 'QUANTITY',
 'OTHER',
 'QUANTITY',
 'OTHER',
 'PRODUCT',
 'OTHER',
 'PRODUCT',
 'LANGUAGE',
 'PERSON',
 'TIME',
 'PERSON',
 'WORK OF ART',
 'PRODUCT',
 'PERSON',
 'WORK OF ART',
 'PRODUCT',
 'QUANTITY',
 'OTHER',
 'WORK OF ART',
 'OTHER',
 'PRODUCT',
 'PERSON',
 'WORK OF ART',
 'OTHER',
 'WORK OF ART',
 'OTHER',
 'OTHER',
 'QUANTITY',
 'OTHER',
 'QUANTITY',
 'PERSON',
 'OTHER',
 'LOCATION',
 'PERSON',
 'PERSON',
 'TIME',
 'TIME',
 'PERSON',
 'QUANTITY',
 'OTHER',
 'DATE',
 'DATE',
 'LANGUAGE',
 'OTHER',
 'TIME',
 'OTHER',
 'PERSON',
 'EVENT',
 'LANGUAGE',
 'QUANTITY',
 'OTHER',
 'QUANTITY',
 'QUANTITY',
 'DATE',
 'PERSON',
 'LOCATION',
 'LANGUAGE',
 'QUANTITY',
 'PERSON',
 'OTHER',
 'EVENT',
 'PRODUCT',
 'EVENT',
 'OTHER',
 'QUANTITY',
 'QUANTITY',
 'OTHER',
 'PERSON',
 'PRODUCT',
 'LANGUAGE',
 'TIME',
 'LANGUAGE',
 'LANGUAGE',
 'OTHER',
 'OTHER',
 'OTHER',
 'OTHER',
 'QUANTITY',
 'ORGANIZATION',
 'TIME',
 'PERSON',
 'QUANTITY',
 'TIME',
 'PERSON',
 'PERSON',
 'WORK OF ART',
 'PERSON',
 'PERSON',
 'ORGANIZATION',
 'WORK OF ART',
 'OTHER',
 'OTHER',
 'LOCATION',
 'OTHER',
 'LANGUAGE',
 'QUANTITY',
 'OTHER',
 'ORGANIZATION',
 'LOCATION',
 'OTHER',
 'QUANTITY',
 'PERSON',
 'OTHER',
 'QUANTITY',
 'PERSON',
 'QUANTITY',
 'WORK OF ART',
 'PERSON',
 'PERSON',
 'PERSON',
 'QUANTITY',
 'PERSON',
 'OTHER',
 'PERSON',
 'DATE',
 'DATE',
 'OTHER',
 'DATE',
 'PERSON',
 'TIME',
 'TIME',
 'OTHER',
 'PERSON',
 'PERSON',
 'TIME',
 'DATE',
 'PERSON',
 'PERSON',
 'ORGANIZATION',
 'OTHER',
 'OTHER',
 'TIME',
 'PERSON',
 'LOCATION',
 'PERSON',
 'PERSON',
 'ORGANIZATION',
 'OTHER',
 'DATE',
 'EVENT',
 'EVENT',
 'OTHER',
 'TIME',
 'QUANTITY',
 'PERSON',
 'TIME',
 'LANGUAGE',
 'TIME',
 'QUANTITY',
 'PRODUCT',
 'LOCATION',
 'TIME',
 'LOCATION',
 'OTHER',
 'OTHER',
 'TIME',
 'OTHER',
 'PERSON',
 'QUANTITY',
 'TIME',
 'OTHER',
 'LOCATION',
 'LOCATION',
 'QUANTITY',
 'OTHER',
 'OTHER',
 'OTHER',
 'TIME',
 'LANGUAGE',
 'OTHER',
 'QUANTITY',
 'TIME',
 'LOCATION',
 'OTHER',
 'EVENT',
 'LANGUAGE',
 'QUANTITY',
 'ORGANIZATION',
 'WORK OF ART',
 'PRODUCT',
 'TIME',
 'EVENT',
 'TIME',
 'WORK OF ART',
 'LANGUAGE',
 'QUANTITY',
 'OTHER',
 'OTHER',
 'PERSON',
 'LOCATION',
 'TIME',
 'LOCATION',
 'PERSON',
 'PERSON',
 'QUANTITY',
 'TIME',
 'QUANTITY',
 'WORK OF ART',
 'LANGUAGE',
 'QUANTITY',
 'PERSON',
 'PRODUCT',
 'PERSON',
 'QUANTITY',
 'PERSON',
 'PERSON',
 'QUANTITY',
 'PRODUCT',
 'PERSON',
 'ORGANIZATION',
 'QUANTITY',
 'QUANTITY',
 'PERSON',
 'PRODUCT',
 'PERSON',
 'WORK OF ART',
 'OTHER',
 'DATE',
 'LOCATION',
 'LANGUAGE',
 'OTHER',
 'TIME',
 'LOCATION',
 'QUANTITY',
 'LOCATION',
 'EVENT',
 'PERSON',
 'TIME',
 'OTHER',
 'OTHER',
 'LOCATION',
 'WORK OF ART',
 'TIME',
 'QUANTITY',
 'EVENT',
 'LOCATION',
 'EVENT',
 'LANGUAGE',
 'QUANTITY',
 'LOCATION',
 'EVENT',
 'OTHER',
 'LANGUAGE',
 'WORK OF ART',
 'LOCATION',
 'WORK OF ART',
 'QUANTITY',
 'LANGUAGE',
 'OTHER',
 'WORK OF ART',
 'LANGUAGE',
 'OTHER',
 'WORK OF ART',
 'OTHER',
 'PERSON',
 'TIME',
 'OTHER',
 'WORK OF ART',
 'LOCATION',
 'OTHER',
 'OTHER',
 'WORK OF ART',
 'QUANTITY',
 'LOCATION',
 'OTHER',
 'OTHER',
 'WORK OF ART',
 'WORK OF ART',
 'OTHER',
 'TIME',
 'PRODUCT',
 'OTHER',
 'LOCATION',
 'TIME',
 'OTHER',
 'WORK OF ART',
 'OTHER',
 'PERSON',
 'OTHER',
 'PERSON',
 'OTHER',
 'PERSON',
 'QUANTITY',
 'TIME',
 'PERSON',
 'PERSON',
 'TIME',
 'PERSON',
 'PERSON',
 'OTHER',
 'PERSON',
 'OTHER',
 'PERSON',
 'OTHER',
 'QUANTITY',
 'OTHER',
 'OTHER',
 'DATE',
 'QUANTITY',
 'OTHER',
 'PERSON',
 'TIME',
 'QUANTITY',
 'QUANTITY',
 'PERSON',
 'TIME',
 'PERSON',
 'TIME',
 'QUANTITY',
 'PERSON',
 'PERSON',
 'TIME',
 'QUANTITY',
 'PERSON',
 'OTHER',
 'OTHER',
 'QUANTITY',
 'OTHER',
 'OTHER',
 'OTHER',
 'OTHER',
 'OTHER',
 'LANGUAGE',
 'OTHER',
 'PERSON',
 'OTHER',
 'LANGUAGE',
 'LANGUAGE',
 'PRODUCT',
 'PRODUCT',
 'LANGUAGE',
 'PERSON',
 'PRODUCT',
 'OTHER',
 'OTHER',
 'QUANTITY',
 'QUANTITY',
 'WORK OF ART',
 'TIME',
 'OTHER',
 'PRODUCT',
 'PERSON',
 'OTHER',
 'EVENT',
 'OTHER',
 'LANGUAGE',
 'TIME',
 'LOCATION',
 'PERSON',
 'LOCATION',
 'PERSON',
 'PERSON',
 'QUANTITY',
 'QUANTITY',
 'PERSON',
 'TIME',
 'PERSON',
 'OTHER',
 'PERSON',
 'WORK OF ART',
 'PERSON',
 'OTHER',
 'PERSON',
 'PERSON',
 'WORK OF ART',
 'FACILITY',
 'OTHER',
 'PERSON',
 'EVENT',
 'OTHER',
 'LOCATION',
 'OTHER',
 'WORK OF ART',
 'OTHER',
 'DATE',
 'PERSON',
 'PERSON',
 'OTHER',
 'OTHER',
 'OTHER',
 'OTHER',
 'PERSON',
 'PERSON',
 'PERSON',
 'PERSON',
 'LANGUAGE',
 'OTHER',
 'OTHER',
 'OTHER',
 'ORGANIZATION',
 'WORK OF ART',
 'LOCATION',
 'ORGANIZATION',
 'LANGUAGE',
 'OTHER',
 'ORGANIZATION',
 'TIME',
 'OTHER',
 'OTHER',
 'OTHER',
 'PERSON',
 'OTHER',
 'OTHER',
 'PERSON',
 'PERSON',
 'OTHER',
 'TIME',
 'DATE',
 'EVENT',
 'OTHER',
 'OTHER',
 'LANGUAGE',
 'TIME',
 'WORK OF ART',
 'PERSON',
 'OTHER',
 'WORK OF ART',
 'LANGUAGE',
 'OTHER',
 'LANGUAGE',
 'LANGUAGE',
 'TIME',
 'OTHER',
 'OTHER',
 'DATE',
 'OTHER',
 'TIME',
 'OTHER',
 'PRODUCT',
 'DATE',
 'OTHER',
 'PERSON',
 'PERSON',
 'TIME',
 'QUANTITY',
 'DATE',
 'PRODUCT',
 'LANGUAGE',
 'FACILITY',
 'OTHER',
 'PERSON',
 'LANGUAGE',
 'TIME',
 'PERSON',
 'PERSON',
 'PRODUCT',
 'OTHER',
 'OTHER',
 'ORGANIZATION',
 'PERSON',
 'ORGANIZATION',
 'LANGUAGE',
 'LANGUAGE',
 'LANGUAGE',
 'OTHER',
 'PRODUCT',
 'OTHER',
 'DATE',
 'OTHER',
 'PRODUCT',
 'LOCATION',
 'PRODUCT',
 'OTHER',
 'EVENT',
 'ORGANIZATION',
 'LOCATION',
 'ORGANIZATION',
 'QUANTITY',
 'PERSON',
 'TIME',
 'WORK OF ART',
 'PERSON',
 'OTHER',
 'PERSON',
 'PRODUCT',
 'OTHER',
 'DATE',
 'PERSON',
 'TIME',
 'TIME',
 'PERSON',
 'PERSON',
 'PRODUCT',
 'LANGUAGE',
 'PERSON',
 'DATE',
 'PERSON',
 'PERSON',
 'PERSON',
 'OTHER',
 'ORGANIZATION',
 'OTHER',
 'PRODUCT',
 'ORGANIZATION',
 'LANGUAGE',
 'PERSON',
 'LANGUAGE',
 'OTHER',
 'WORK OF ART',
 'QUANTITY',
 'QUANTITY',
 'EVENT',
 'OTHER',
 'OTHER',
 'QUANTITY',
 'QUANTITY',
 'PERSON',
 'PRODUCT',
 'PERSON',
 'OTHER',
 'QUANTITY',
 'QUANTITY',
 'QUANTITY',
 'TIME',
 'PERSON',
 'QUANTITY',
 'QUANTITY',
 'QUANTITY',
 'TIME',
 'QUANTITY',
 'QUANTITY',
 'QUANTITY',
 'PERSON',
 'QUANTITY',
 'TIME',
 'QUANTITY',
 'PERSON',
 'QUANTITY',
 'QUANTITY',
 'QUANTITY',
 'QUANTITY',
 'QUANTITY',
 'TIME',
 'PERSON',
 'QUANTITY',
 'QUANTITY',
 'OTHER',
 'EVENT',
 'OTHER',
 'QUANTITY',
 'ORGANIZATION',
 'PERCENT',
 'TIME',
 'PERSON',
 'OTHER',
 'PERSON',
 'QUANTITY',
 'QUANTITY',
 'PERSON',
 'ORGANIZATION',
 'PERSON',
 'OTHER',
 'LANGUAGE',
 'DATE',
 'QUANTITY',
 'OTHER',
 'TIME',
 'OTHER',
 'QUANTITY',
 'OTHER',
 'DATE',
 'OTHER',
 'QUANTITY',
 'TIME',
 'OTHER',
 'TIME',
 'QUANTITY',
 'PERSON',
 'LANGUAGE',
 'OTHER',
 'ORGANIZATION',
 'QUANTITY',
 'TIME',
 'PERSON',
 'OTHER',
 'EVENT',
 'OTHER',
 'PERSON',
 'TIME',
 'LANGUAGE',
 'PERSON',
 'LOCATION',
 'OTHER',
 'TIME',
 'PERSON',
 'TIME',
 'OTHER',
 'OTHER',
 'WORK OF ART',
 'OTHER',
 'PERSON',
 'WORK OF ART',
 'OTHER',
 'OTHER',
 'OTHER',
 'OTHER',
 'OTHER',
 'PERSON',
 'TIME',
 'PERSON',
 'LOCATION',
 'PERSON',
 'LANGUAGE',
 'EVENT',
 'GPE',
 'DATE',
 'OTHER',
 'OTHER',
 'TIME',
 'ORGANIZATION',
 'OTHER',
 'LANGUAGE',
 'PERSON',
 'FACILITY',
 'PERSON',
 'OTHER',
 'ORGANIZATION',
 'PERCENT',
 'TIME',
 'ORGANIZATION',
 'LANGUAGE',
 'EVENT',
 'EVENT',
 'QUANTITY',
 'OTHER',
 'OTHER']

#question_classes = pd.read_csv("question_classification.txt").reset_index(drop=True)
#print(len(question_classes))

ques_ans_tag_mapping  = {
    'PERSON':{'PERSON'},
    'NORP':'NORP',
    'FACILITY':'FACILITY',
    'ORGANIZATION':'ORGANIZATION',
    'GPE':{'GRE','LOCATION'},
    'LOCATION':{'GPE','LOCATION'},
    'PRODUCT':{'PRODUCT'},
    'LAW':'LAW',
    'TIME':{'DATE','TIME'},
    'DATE':{'DATE','TIME'},
    'QUANTITY':{'QUANTITY','PERCENT','MONEY'},
    'PERCENT':{'PERCENT','QUANTITY'},
    'MONEY':'QUANTITY',
    'LANGUAGE':'LANGUAGE',
    'CARDINAL':'CARDINAL',
    'ORDINAL':'ORDINAL',
    'EVENT':'EVENT',
    'WORK OF ART':'WORK OF ART'
}


pipeline = remote_pipeline.RemotePipeline()

count = 0
adjust = 0

for i in range(0,len(question_classes)):
    check = 0
    #doc = pipeline.doc('It is a replica of the grotto at Lourdes, France where the Virgin Mary reputedly appeared to Saint Bernadette Soubirous in 1858.')
    doc = pipeline.doc(data["sentences"][i])
    target_label = question_classes[i]
    if target_label == 'OTHER':
        print('cannot find answer')
        #adjust += 1
        continue;
    poss_labels = ques_ans_tag_mapping[target_label]
    find = False
    ans = []
    tagged_strings = doc.get_ner_ontonotes
    #print(tagged_strings)
    ans_list = formal_ans["text"][i].split()
    #print("the ans string list is " + str(ans_list))
    for j in range(0,len(tagged_strings)):

        cur_label = tagged_strings[j]['label']

        if cur_label in poss_labels:
            #print(cur_label)
            words = tagged_strings[j]['tokens'].split()
            for word in words:
                ans.append(word)
                find = True
                if word in formal_ans["text"][i].split() and check == 0:
                    check+=1
    if not find:
        print('cannot find answer')
    if find:
        #print(ans)
        count += check

print("the accuracy is:"+str(count/(len(question_classes)-adjust)))





